/*
 * Global application theme.
 * Framework overrides and customization goes here.
	*/
	$theme-base: #252839;
html, body {
	// font-family: Roboto,"Helvetica Neue",sans-serif;
	-webkit-font-smoothing: auto;
	-moz-osx-font-smoothing: auto;
	background: $theme-base !important;
	overflow: hidden;
	text-rendering: geometricPrecision;
	width: 100%;
	height: auto;
}

.background-secondary {
	background: white;
}

@mixin max-width-align {
	max-width: 800px !important;
}

.content-alignment-width {
	@include max-width-align;
}

.content-alignment { 
	@include max-width-align;
	text-align: center;
	margin: auto !important;
}

.show > .dropdown-menu {
	display: block;
}



p {
	word-wrap: break-word;
	white-space: pre-line;
}



.call-action {
	// background:white;
	color:black;
	padding: 10px;
}


.color-container {
	padding: 10px;
	border-radius: 2px;
	background: whitesmoke !important;
	color: black !important;
}

@keyframes fadein {
	from {
					opacity: 0
	}

	to {
					opacity: 1
	}
}

.blink {
	animation: blinker 1s linear infinite;
}

@keyframes blinker {  
	50% { opacity: 0; }
}


// mixin
@mixin angle($pseudo, $flip: false, $angle: 2deg) {
	// Possible values for $pseudo are: before, after, both
	@if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
			position: relative;
			z-index: 1;
			$selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');

			#{$selector} {
					background: inherit;
					content: '';
					display: block;
					height: 50%;
					left: 0;
					position: absolute;
					right: 0;
					z-index: -1;
					-webkit-backface-visibility: hidden; // for Chrome Windows
			}

			@if $pseudo == 'before' {
					#{$selector} {
							top: 0;

							@if $flip {
									transform: skewY($angle * -1);
									transform-origin: 0 0;
							} @else {
									transform: skewY($angle);
									transform-origin: 100% 0;
							}
					}
			}

			@if $pseudo == 'after' {
					#{$selector} {
							bottom: 0;

							@if $flip {
									transform: skewY($angle);
									transform-origin: 0 100%;
							} @else {
									transform: skewY($angle * -1);
									transform-origin: 100%;
							}
					}
			}

			@if $pseudo == 'both' {
					&:before {
							top: 0;

							@if $flip {
									transform: skewY($angle * -1);
									transform-origin: 0 0;
							} @else {
									transform: skewY($angle);
									transform-origin: 100% 0;
							}
					}

					&:after {
							bottom: 0;

							@if $flip {
									transform: skewY($angle);
									transform-origin: 0 0;
							} @else {
									transform: skewY($angle * -1);
									transform-origin: 100%;
							}
					}
			}
	}
}

// slanted edges here
.edge--bottom {
	@include angle(after);
}

.edge--bottom--reverse {
	@include angle(after, true);
}

.edge--top {
	@include angle(before);
}

.edge--top--reverse {
	@include angle(before, true);
}

.edge--both {
	@include angle(both);
}

.edge--both--reverse {
	@include angle(both, true);
}

.section {
	margin-top: 10px;
	margin-bottom: 10px;
}

// .btn {
// 	cursor: pointer;
// 	background: whitesmoke;
// 	color: black;
// }

.fade-slide-in {
	animation-name: fadeSlideIn;
	animation-duration: .7s;
	animation-fill-mode: both
}

@keyframes fadeSlideIn {
	from {
					opacity: 0;
					transform: translate3d(0,20px,0)
	}

	to {
					opacity: 1;
					transform: translate3d(0,0,0)
	}
}

.align-vertical {
	display: inline-flex;
	align-items: center;
	vertical-align: middle;
	min-height: 0;
}